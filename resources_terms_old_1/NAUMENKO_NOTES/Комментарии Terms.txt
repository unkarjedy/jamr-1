Заметки и проблемы, связанные с внедрением словаря IT-терминов в JAMR.

0.0) Основная проблема - при обучении, например на выборке LDC2014T12-proxy 
	или LDC2014T12 (модель скачана) ничего не было известно о специфических IT-терминах. 
	Выборка не состояла из статей на IT-тему. Поэтому никаких весов признаков, связанных с it-терминами в моделях нет.
	Поэтому Score-value для "концептов", соответствующих терминам чаще всего будет нулевым и они будут игнорироваться.
	Следовательно на этапе выделения концептов (где используется аналог аглоритма Витерби) 
	необходимо как-то приоритезировать концепты it-терминов над другими концептами.
	(Учитывая, что мы пытаемся разобрать определения, состоящие из других IT - терминов).
	Однако, не стоит отдавать 100% приоритет it-терминам, так как могут быть коллиззии it-терминов и обычных слов (data, type,).
	Т.е. мне кажется, что пока основное перспективное направление - оценить Score-value it-концептов на этапе распознавания концептов весов...
	(повторяюсь)  Неформально говоря, при каждом возникновении коллиззии it-концепта и некоторого концепта из словаря обучающей выборки (или NER/dateEnteties/...)
	нужно решить чему отдать приоритет - it-термину или "честному" концепту.
	
	Учитывая, что структура текстов определений не очень сложная, я сейчас "играюсь" с n-граммами (2 и 3).
	На текстах определений терминов ищу наиборее частые n-граммы, включающие it-термины... 
	В общем, тут у меня поле боя ещё не остыло и я пока эксперементирую с тем, что можно с ними сделать.
	
	Пока борюсь с первой стадией, до второй пока не добрался.
	

0.1) Сейчас у термина несколько определений, каждое определение делится на предложения.
	Каждому предложению уже пытаемся посторить AMR граф. 
	Пока считаем, что все разборы происходят независимо.
	Т.е. рассматриваем только 1) список определений  2) Список всех предложений всех определений, независимо.
	
0.2)  Количество предложений в текстах определений ~ 100.000. 
	Парсинг будет проходить по грубым оценкам около 24 часов.
	Нынешний JAMR очень медленный, так как создавался в исследовательских целях.
	
	Но я так понимаю это пока и не критично, ведь целью не является построить AMR для всех предложений.
	Необходимо либо выбрать какую-то случайную подвыборку, либо какую-нибудь показательную выборку
	
	Думаю можно пока рассматривать только первое предложение каждого определения.
	Часто именно оно несёт основную смысловую нагрузку. Остальные предложения часто становятся контексто-зависимыми 
	(использование отсылок к сущностям предыдущего предложения через местоимения that, this...).
	
	М.б. какие-нибудь идеи?
	
0.3) У меня сомнения по поводу многих предложений, стоит ли вообще представлять их в форме AMR.
	Например, многие предложения представляют из себя правила и больше подходят для представления в некоторой логической форме, чем в форме AMR.
	Может быть должна быть какая-то фильтрация предложений, которые мы вообще должны переводить в AMR?
	"The error occurs WHEN rows, columns or individual data items referenced in a formula have been deleted"
	"For example, IF Finder is used to copy a file from a Mac to a Windows machine, [THEN] the .DS_Store is created in the Windows machine"
	

	
НИЖЕ - НЕ КРИТИЧНО
1) Грязные тексты определений
	1) (частично решено эвристиками)
		Неочевидно как разбить на предложения. Делить только по точке - не вариант.
		Например "Zone files have a .DB file extension.", в системе нет понятия .DB, так, что не ясно точка в середине - это вообще что?
		Сейчас я использую ряд эвристик, для определения границ предложения. "Как-то" работает, но бывают редкие "странные предложения".
	2)  Среди определений есть определения других терминов, которые наверное, разбирать не нужно.
		(пример: http://lookup.computerlanguage.com/host_app/search?cid=C999999&term=.NET%20Enterprise%20Server)
		Нужно поправить извлечения определений из html страничек 
	3)  Всякие запятые где не надо (пример "A zone file is made up of "resource records," which are lines...")
		Выглядит как "ляп" в алгоритме извлечения текстов из сайта (на сайте этих символов нет? )
	4)  Обрезанные предложения по ссылке See...
		Пример: http://lookup.computerlanguage.com/host_app/search?cid=C999999&term=graphics%20format
		У нас в определениях последнее предложение выглядит так: "To understand the difference between the two types,"
		Нужно поправить алгоритм извлечения определений из html страниче
2) Длинные понятия (до 48 символов)
	Решение - пока вообще не использовать в словаре концептов (встречаются очень редко)
3) Фразы в скобках (таких много). 
	Что делать с ними? 
	Пока я вырезаю фразы вначале, извекая синонимы терминов.
	Наверное, пока стоит вырезать все? 
	В зависимости от контекста используются в разных целях.
	"This is known as a "third-level domain name," because the last name (second level) and first name (third level) are used."
	"A half-duplex serial bus from Maxim Integrated Products, Sunnyvale, CA (www.maximintegrated.com)."
	"An Ethernet standard that transmits at 10 Mbps over twisted wire pairs (telephone wire)."
	"The first 3DO player was Panasonic's Realistic Entertainment Active Learning (REAL) Multiplayer..."
4)  Проблема разбиения на лексемы.
	В IT терминах много спецсимволов (C/C++, CIE L*a*b* ит.д).
	Токенайзер нужно подредактировать
5) 	Как на этих спец-символах отработает StandfordParser?
	Скорее всего придётся их как-то escape-ить...
6)  Непонятно что делать с фразами в кавычках, в которых может находиться другое предложение.
	"The asterisk is a wild card symbol that means "all letters" in the name"
7)  Синонимы в скобках в начале определений (решено)
		.NET SDK ( .NET Software Development Kit)
		.aero (.AEROspace) 	
		
	Также в текстах могут использоваться синонимы и вариации определений...
	В идеале нужен модуль, которые сможет распознать термин в его вариации.
	Некоторые термины отсылают к другим, например: UDIMM (Unbuffered DIMM) See RDIMM. 
	То есть это тоже синонимы?
	Синоним VS Расшифровка абривиатуры?

TODO:
(В теории, не критично..)
-- Обработка вещественных чисел как констант (сейчас вроде только целые в JAMR)
-- Обработка различных вариантов ссылок https://www.google.com, google.com, ftp://some.server.path
-- Помимо грамматики зависимостей использовать грамматику составляющих. (комментарий через N месяцев: ну ничерта себя я загнул)